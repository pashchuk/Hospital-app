<Application x:Class="Hospital.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="LoginWindow.xaml">
    <Application.Resources>
        <Color x:Key="ButtonColor">LightSteelBlue</Color>
        
        <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="#343434"/>
            <Setter Property="CornerRadius" Value="50"/>
            <Setter Property="BorderBrush" Value="Silver"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
        
        <Style x:Key="EllipseButtonStyle" x:Name="EllipseStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Name="EllipsePl1" Width="100" Height="20" Stroke="#FF000000" StrokeThickness="1">
                                <Ellipse.Fill>
                                    <SolidColorBrush Color="{DynamicResource ButtonColor}"/>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="DisplayArea" TargetType="{x:Type HeaderedContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Background="#FF282828" BorderBrush="#FF282828"  Padding="8,2,8,6" CornerRadius="6,6,0,0" BorderThickness="4,4,4,0">
                                <TextBlock Foreground="LightGray" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <ContentPresenter ContentSource="Header"/>
                                </TextBlock>
                            </Border>
                            <Border Grid.Row="1" Background="White" BorderBrush="#FF282828" CornerRadius="0,0,6,6" BorderThickness="4,0,4,4">
                                <ContentPresenter/>
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="ContentScale" ScaleX="1" ScaleY="1" />
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="HeaderedContentControl.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentScale" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="0.0" BeginTime="0:0:0" Duration="0:0:0" AutoReverse="False"/>
                                        <DoubleAnimation Storyboard.TargetName="ContentScale" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.0" BeginTime="0:0:0.2" Duration="0:0:1" AutoReverse="False"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Light pane with header, used to isolate sub sections of the interface-->
        <Style x:Key="SubDisplayArea" TargetType="{x:Type HeaderedContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Background="LightGray" BorderBrush="LightGray"  Padding="8,2,8,6" CornerRadius="6,6,0,0" BorderThickness="2,2,2,0">
                                <TextBlock Foreground="#FF282828" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <ContentPresenter ContentSource="Header"/>
                                </TextBlock>
                            </Border>
                            <Border Grid.Row="1" Background="White" BorderBrush="LightGray" CornerRadius="0,0,6,6" BorderThickness="2,0,2,2">
                                <ContentPresenter/>
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="ContentScale" ScaleX="1" ScaleY="1" />
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="OpacityButtonStyle">
            <Setter Property="Foreground" Value="Silver"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FF2f4f4f" Offset="0.51"/>
                        <GradientStop Color="#FF506464" Offset="0.48"/>
                        <GradientStop Color="#FF607070" Offset="1"/>
                        <GradientStop Color="#FF698080" Offset="0.49"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="#FF2B5F91"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="MinWidth" Value="20"/>
            <Setter Property="FontSize" Value="13"/>
<!--            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle Stroke="{TemplateBinding BorderBrush}" RadiusX="15" RadiusY="15" Fill="{TemplateBinding Background}"/>
                            <Rectangle VerticalAlignment="Top" Height="10" Margin="8,2,8,0" RadiusX="10" RadiusY="5">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#11FFFFFF" Offset="1"/>
                                        <GradientStop Color="#ff858585" Offset="0.2"/>
                                        <GradientStop Color="#B2CCCCCC" Offset="0"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="rectangle" RadiusX="15" RadiusY="15" Fill="White" Margin="1" Opacity="0"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" Margin="{TemplateBinding Padding}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="rectangle" Value="0.2"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" TargetName="rectangle" Value="0.3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Fill" TargetName="rectangle" Value="#666"/>
                                <Setter Property="Opacity" TargetName="rectangle" Value="0.6"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="OvalTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" BorderBrush="WhiteSmoke" BorderThickness="1" CornerRadius="10">
                            <ScrollViewer x:Name="PART_ContentHost" VerticalContentAlignment="Center" Background="Transparent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="OvalPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="border" BorderBrush="WhiteSmoke" BorderThickness="1" CornerRadius="10">
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"  Background="Transparent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Fonts" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Foreground" Value="Silver"/>
        </Style>

        <Style x:Key="LinkFonts" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="Silver"/>
        </Style>

        <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="BorderBrush" Value="Silver"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        
        <Style x:Key="LinkBorder" TargetType="{x:Type Border}">
            <Setter Property="Margin" Value="2,0"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="BorderBrush" Value="AliceBlue"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Background" Value="SlateGray"/>
        </Style>

        <Style x:Key="LinkHyperLink" TargetType="{x:Type Hyperlink}">
            <Setter Property="Foreground" Value="LightSkyBlue"/>
            <Setter Property="TextDecorations" Value="Underline"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="IsMouseDirectlyOver" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
